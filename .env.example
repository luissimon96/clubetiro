# ==========================================
# CONFIGURAÇÕES DO BANCO DE DADOS
# ==========================================
POSTGRES_DB=clube_tiro_db
POSTGRES_USER=clube_tiro_user
POSTGRES_PASSWORD=clube_tiro_senha_forte_123
POSTGRES_PORT=5432

# URL completa do banco (usado pelo Nuxt.js)
DATABASE_URL=postgresql://clube_tiro_user:clube_tiro_senha_forte_123@postgres:5432/clube_tiro_db

# Database connection configuration (for connection pool)
DB_HOST=postgres
DB_PORT=5432
DB_NAME=clube_tiro_db
DB_USER=clube_tiro_user
DB_PASSWORD=clube_tiro_senha_forte_123

# ==========================================
# CONFIGURAÇÕES DO REDIS
# ==========================================
REDIS_URL=redis://redis:6379
REDIS_PORT=6379

# ==========================================
# CONFIGURAÇÕES DO NUXT.JS
# ==========================================
# Ambiente de execução
NODE_ENV=development

# Host e porta para o servidor Nuxt.js
NUXT_HOST=0.0.0.0
NUXT_PORT=3000

# Chave secreta para sessões e criptografia - ALTERE EM PRODUÇÃO!
# Gere uma com: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
NUXT_SECRET_KEY=your_super_secure_nuxt_secret_key_minimum_64_chars_recommended_generate_with_crypto

# Base URL pública da API (exposta ao cliente)
NUXT_PUBLIC_API_BASE=/api

# ==========================================
# CONFIGURAÇÕES DE PRODUÇÃO - NITRO
# ==========================================
# Preset do Nitro para deploy (node-server, vercel, netlify, etc.)
NITRO_PRESET=node-server

# Configurações de otimização Node.js
NODE_OPTIONS=--max-old-space-size=1024

# ==========================================
# CONFIGURAÇÕES DE AUTENTICAÇÃO (Legacy)
# ==========================================
# JWT - GERE UMA CHAVE FORTE COM: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your_super_secure_jwt_secret_key_minimum_64_chars_recommended_generate_with_crypto
JWT_EXPIRES_IN=24h
JWT_REFRESH_EXPIRES_IN=7d

# ==========================================
# CONFIGURAÇÕES DE EMAIL
# ==========================================
# Email (Gmail SMTP gratuito)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USER=seuemail@gmail.com
EMAIL_PASS=sua_senha_de_app

# ==========================================
# CONFIGURAÇÕES DE UPLOAD
# ==========================================
MAX_FILE_SIZE=10MB
UPLOAD_PATH=/app/uploads

# ==========================================
# CONFIGURAÇÕES DE API LEGACY
# ==========================================
# API URL para frontend separado (se ainda usar)
API_URL=http://localhost:3000/api

# ==========================================
# CONFIGURAÇÕES DE DOCKER
# ==========================================
# Prefixo para nomes de containers e volumes
COMPOSE_PROJECT_NAME=clube-tiro

# ==========================================
# CONFIGURAÇÕES DE SEGURANÇA
# ==========================================
# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,https://localhost:3000

# Rate limiting (requests per minute)
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100

# Password hashing rounds (higher = more secure but slower)
BCRYPT_ROUNDS=12

# Session security
SESSION_SECURE=false  # Set to true in production with HTTPS
SESSION_SAME_SITE=lax

# ==========================================
# CONFIGURAÇÕES DE MONITORAMENTO
# ==========================================
# Configurações de log level (error, warn, info, debug)
LOG_LEVEL=info

# Enable metrics collection
ENABLE_METRICS=true
METRICS_PORT=9090

# Health check configuration
HEALTH_CHECK_TIMEOUT=5000
HEALTH_CHECK_INTERVAL=30000

# ==========================================
# CONFIGURAÇÕES DE BACKUP
# ==========================================
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30
BACKUP_ENCRYPTION_KEY=your-backup-encryption-key-here

# ==========================================
# CONFIGURAÇÕES DE SSL/TLS (Produção)
# ==========================================
SSL_CERT_PATH=/etc/nginx/ssl/clube-tiro.crt
SSL_KEY_PATH=/etc/nginx/ssl/clube-tiro.key

# ==========================================
# CONFIGURAÇÕES DE PERFORMANCE
# ==========================================
# Database connection pool
DB_POOL_MIN=2
DB_POOL_MAX=20
DB_POOL_IDLE_TIMEOUT=30000

# Redis connection pool
REDIS_POOL_MIN=2
REDIS_POOL_MAX=10

# ==========================================
# FEATURE FLAGS
# ==========================================
ENABLE_USER_REGISTRATION=true
ENABLE_EMAIL_VERIFICATION=false
ENABLE_TWO_FACTOR_AUTH=false
ENABLE_API_DOCUMENTATION=true
ENABLE_ADMIN_PANEL=true

# ==========================================
# INSTRUÇÕES DE SEGURANÇA
# ==========================================
# IMPORTANTE: 
# 1. Copie este arquivo para .env
# 2. Altere TODAS as senhas e chaves secretas
# 3. Nunca commite o arquivo .env real no Git
# 4. Use senhas fortes em produção (mínimo 32 caracteres)
# 5. Considere usar um gerenciador de secrets em produção
# 6. Gere chaves seguras com: openssl rand -base64 32
# 7. Em produção, defina NODE_ENV=production