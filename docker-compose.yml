version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: clube-tiro-postgres
    environment:
      POSTGRES_DB: clube_tiro_db
      POSTGRES_USER: clube_tiro_user
      POSTGRES_PASSWORD: clube_tiro_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres-data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - clube-tiro-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U clube_tiro_user -d clube_tiro_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: clube-tiro-redis
    ports:
      - "6379:6379"
    volumes:
      - ./volumes/redis-data:/data
    networks:
      - clube-tiro-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: clube-tiro-backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://clube_tiro_user:clube_tiro_pass@postgres:5432/clube_tiro_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      PORT: 3001
    volumes:
      - ./backend:/app
      - ./volumes/uploads:/app/uploads
      - ./volumes/logs:/app/logs
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - clube-tiro-network
    command: npm run dev

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: clube-tiro-frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      CHOKIDAR_USEPOLLING: true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - clube-tiro-network
    command: npm start

  # Nginx Proxy (apenas em produção, comentado no dev)
  # nginx:
  #   image: nginx:alpine
  #   container_name: clube-tiro-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - clube-tiro-network

networks:
  clube-tiro-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: