version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: clube-tiro-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-clube_tiro_db}
      POSTGRES_USER: ${POSTGRES_USER:-clube_tiro_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-clube_tiro_pass}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - clube-tiro-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-clube_tiro_user} -d ${POSTGRES_DB:-clube_tiro_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: clube-tiro-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - clube-tiro-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Aplicação Nuxt.js (desenvolvimento)
  nuxt-app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: clube-tiro-nuxt-dev
    ports:
      - "${NUXT_PORT:-3000}:3000"
    environment:
      NODE_ENV: development
      NUXT_HOST: 0.0.0.0
      NUXT_PORT: 3000
      DATABASE_URL: postgresql://${POSTGRES_USER:-clube_tiro_user}:${POSTGRES_PASSWORD:-clube_tiro_pass}@postgres:5432/${POSTGRES_DB:-clube_tiro_db}
      REDIS_URL: redis://redis:6379
      NUXT_SECRET_KEY: ${NUXT_SECRET_KEY:-dev-secret-key-change-in-production}
    volumes:
      # Mount only source files for hot reload (exclude node_modules)
      - ./pages:/app/pages
      - ./components:/app/components
      - ./composables:/app/composables
      - ./server:/app/server
      - ./models:/app/models
      - ./middleware:/app/middleware
      - ./layouts:/app/layouts
      - ./assets:/app/assets
      - ./public:/app/public
      - ./nuxt.config.ts:/app/nuxt.config.ts
      - ./tailwind.config.js:/app/tailwind.config.js
      - ./tsconfig.json:/app/tsconfig.json
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - clube-tiro-network
    restart: unless-stopped

networks:
  clube-tiro-network:
    driver: bridge
    name: clube-tiro-network

volumes:
  postgres_data:
    name: clube-tiro-postgres-data
  redis_data:
    name: clube-tiro-redis-data